SOLID:
S - Single Responsibility - A class should have single Responsibility.
O - Open Closed - Classes should be open for extension and closed for modification.
L - Liskov substitution - If S is a subtype of T, then objects of type T in a program may be replaced with objects of type S without altering any of the desirable properties of the program. 
I - Interface Segregation - Client should not be forced to depend on methods that they do not use.
D - Dependency Inversion - High level modules should not depend on low level modules. Both should depend on the absraction.
                        - Abstraction should not depend on details. Detials should depend on abstraction;

Stateless Microservices:
    Microservices which do not have state. Services which are independent.

OOPS:
Class - User defined blueprint or prototype from which object are created.
Object - Instance of class. Interact by invoking methods.
Pillars: 
    Abstraction: Data abstraction is the property by virtue of which only the essential details are displayed to the user.
    Encapsulation: Wrapping up of data under a single unit. Technically, in encapsulation, the variables or the data in a class is hidden from any other class and can be accessed only through any member function of the class in which they are declared.
    Inheritance: One class is allowed to inherit the features (fields and methods) of another class.
    Polymorphism: Differentiate between entities with the same name efficiently.

CORS:
Cross-Origin Resource Sharing (CORS) is a HTTP-header to indicate any origins (domain, scheme, or port) other than its own (meaning the html, css, js (the ui) that is loaded when we call the domain) from which a browser should permit loading resources like (fetch/xhr request).
It relies on mechanism -- preflight request.
Preflight request - A request made by the browser in order to check that the server will permit the actual request.
What does the browser send to the server?
The browser sends headers that indicate the HTTP method and headers that will be used in the actual request.

Tell about Api testing and frameworks?
Various testing frameworks and the strategies.

What is Agile Experience?

What are types of assertions?

DRY - Don't Repeat Yourself

crux - cross, crucial, crucify